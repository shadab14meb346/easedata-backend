service: serverless-graphql-rds

frameworkVersion: "3.8.0"

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${env:PROVIDER_STAGE}
  region: ${env:REGION}
  environment:
    JWT_SECRET: ${env:JWT_SECRET}
    DATABASE_URL: ${env:DATABASE_URL}
    REDIRECT_TO_DASHBOARD: ${env:REDIRECT_TO_DASHBOARD}
    HUB_SPOT_CLIENT_ID: ${env:HUB_SPOT_CLIENT_ID}
    HUB_SPOT_CLIENT_SECRET: ${env:HUB_SPOT_CLIENT_SECRET}
    HUB_SPOT_REDIRECT_URI: ${env:HUB_SPOT_REDIRECT_URI}
    GA_CLIENT_ID: ${env:GA_CLIENT_ID}
    GA_CLIENT_SECRET: ${env:GA_CLIENT_SECRET}
    GA_REDIRECT_URI: ${env:GA_REDIRECT_URI}
    MS_CLIENT_ID: ${env:MS_CLIENT_ID}
    MS_CLIENT_SECRET: ${env:MS_CLIENT_SECRET}
    MS_REDIRECT_URI: ${env:MS_REDIRECT_URI}

plugins:
  - serverless-plugin-typescript
  - serverless-offline
package:
  patterns:
    - "migrations/**"
    - "**.js"
    - "config"

custom:
  serverless-offline:
    httpPort: ${env:httpPort, 3000}
    lambdaPort: ${env:lambdaPort, 3002}
  serverless-plugin-typescript:
    tsConfigFileLocation: "./tsconfig.json"

functions:
  graphql:
    handler: server.handler
    events:
      - http:
          path: graphql
          method: post
          cors: true
  playground:
    handler: server.playgroundHandler
    events:
      - http:
          path: playground
          method: get
          cors: true
  oauth-callback:
    handler: ./rest-apis-handlers/oauth-callback.handler
    events:
      - http:
          path: oauth-callback
          method: get
          cors: true
  ga-oauthcallback:
    handler: ./rest-apis-handlers/ga-oauthcallback.handler
    events:
      - http:
          path: ga-oauthcallback
          method: get
          cors: true
  ms-oauthcallback:
    handler: ./rest-apis-handlers/ms-oauthcallback.handler
    events:
      - http:
          path: ms-oauthcallback
          method: get
          cors: true
  cron-job-each-minute:
    handler: ./cronjobs/handler.eachMinute
    events:
      - schedule: rate(1 minute)
  cron-job-each-30-minute:
    handler: ./cronjobs/handler.each30Minute
    events:
      - schedule: rate(30 minutes)
# add all of the possible interval cron jobs here
